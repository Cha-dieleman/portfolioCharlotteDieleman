import React from 'react'
import Media from 'react-media'

import { withStyles } from '@material-ui/core/styles'
import EnConstruction from '../EnConstruction'

const styles = () => ({
  mainContainer: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    // backgroundColor: '#8fa3b4'
  }
})

class ParkMap extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
    }
  }

  componentDidMount() {
    const L = window.L
    const mymap = L.map('mapid').setView([45.777935, 4.852853], 13)
    const mainLayer2 = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
      attribution: '&copy;<a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
      maxZoom: 20,
      tileSize: 512,
      zoomOffset: -1,
    })

    const mainLayer = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy;<a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
}).addTo(mymap)

    const marker = L.marker([45.777935, 4.852853], {title : "Parc de la tÃªte d'or", draggable : 'true'}).bindPopup("<div>La cancoillotte</div>").addTo(mymap)
    const circle2 = L.circle([45.777935, 4.852853], 500, {
      'color': 'orange',
      'fill': true,
      'fillColor': 'green',
      'fillOpacity': 0.5
  }).addTo(mymap)

  const groupLayer = L.layerGroup([circle2, marker])
  

const polygonePark = L.polyline(
  [ [ 4.843533475179823, 45.771111244434806 ], [ 4.843535914460486, 45.771111114914483 ], [ 4.84353835671685, 45.771111075348024 ], [ 4.84354080194893, 45.771111125735437 ], [ 4.843543118641207, 45.771111178205246 ], [ 4.843545560897571, 45.771111138638638 ], [ 4.843548006129661, 45.771111189025888 ], [ 4.843550451361755, 45.771111239413095 ], [ 4.843588106993058, 45.771114319439221 ], [ 4.843563806562999, 45.771157284141005 ], [ 4.844400860586402, 45.77123705217771 ], [ 4.84442578174336, 45.771197317304051 ], [ 4.844427626482627, 45.771194767343182 ], [ 4.844430334753438, 45.771194993452369 ], [ 4.844433171564241, 45.771195217478045 ], [ 4.844435876857929, 45.771195353633203 ], [ 4.844437799003124, 45.771195142473502 ], [ 4.844439598562689, 45.771195113305019 ], [ 4.844441523685039, 45.771194992099126 ], [ 4.844443323244596, 45.771194962930586 ], [ 4.844445254321302, 45.771195021632451 ], [ 4.844447059835232, 45.771195172371634 ], [ 4.844448993889137, 45.771195321027314 ], [ 4.844450802380279, 45.771195561720326 ], [ 4.844452613848629, 45.771195892367224 ], [ 4.844454425317001, 45.771196223014073 ], [ 4.844456239762598, 45.771196643614807 ], [ 4.844458182748195, 45.771197062132039 ], [ 4.844459871631081, 45.771197574770078 ], [ 4.84446156349121, 45.771198177362017 ], [ 4.844463126811395, 45.771198782037402 ], [ 4.844464821648812, 45.77119947458317 ], [ 4.844466390923504, 45.771200259166321 ], [ 4.844467828681043, 45.771200955879024 ], [ 4.844469272393061, 45.771201832499521 ], [ 4.844470716105122, 45.771202709119983 ], [ 4.844472028300019, 45.77120349787004 ], [ 4.844473346449412, 45.771204466527884 ], [ 4.844474539036088, 45.77120552722311 ], [ 4.844475331116666, 45.771206144399336 ], [ 4.844475728645578, 45.7712064979644 ], [ 4.844476924209581, 45.771207648613476 ], [ 4.844477988256396, 45.771208711392184 ], [ 4.844478926740488, 45.771209866208267 ], [ 4.844479736684616, 45.771211023107838 ], [ 4.844480546628779, 45.771212180007424 ], [ 4.844481231010205, 45.771213428944399 ], [ 4.844481915391667, 45.771214677881382 ], [ 4.844482471233142, 45.77121592890186 ], [ 4.844482898534624, 45.771217182005849 ], [ 4.844483457353393, 45.771218522980213 ], [ 4.844483756114895, 45.771219778167719 ], [ 4.844484057853656, 45.771221123309118 ], [ 4.844484099535124, 45.771222382663645 ], [ 4.844484272733872, 45.771223729888561 ], [ 4.844484185875313, 45.771224991326605 ], [ 4.844484101993993, 45.771226342718549 ], [ 4.844437991735004, 45.77147297599037 ], [ 4.844429364316486, 45.771519286931024 ], [ 4.844384465083214, 45.77175978039088 ], [ 4.844382234699438, 45.771762336601093 ], [ 4.844380392916422, 45.771764976514959 ], [ 4.84437842854615, 45.771767798419965 ], [ 4.844376332657282, 45.771770532454433 ], [ 4.844374233791108, 45.771773176534985 ], [ 4.844371997452131, 45.771775552837198 ], [ 4.844369492121965, 45.771777573490574 ], [ 4.844366457740902, 45.77177915270795 ], [ 4.844363662579812, 45.771780188035123 ], [ 4.844360601404735, 45.771780957667325 ], [ 4.844357399779958, 45.771781369567215 ], [ 4.844354069613807, 45.771781783550402 ], [ 4.844350604952157, 45.771782019709065 ], [ 4.844347143267536, 45.771782345821507 ], [ 4.844343807147147, 45.771782579896602 ], [ 4.844340476980824, 45.771782993879391 ], [ 4.84431672713503, 45.771780408735253 ], [ 4.844346195698772, 45.771738170126355 ], [ 4.843494759631788, 45.771651524397008 ], [ 4.843467529229656, 45.771695346556136 ], [ 4.843427269658187, 45.771691318643654 ], [ 4.843423377716924, 45.77169030166619 ], [ 4.843419491726917, 45.771689464596442 ], [ 4.843415474220329, 45.771688539654946 ], [ 4.843411588230559, 45.771687702584927 ], [ 4.843407824830977, 45.771686683524628 ], [ 4.843404061431535, 45.771685664464201 ], [ 4.843400674729063, 45.771684369295031 ], [ 4.843397536182462, 45.771682800099448 ], [ 4.84339464579175, 45.771680956877418 ], [ 4.843391623884598, 45.771679025783705 ], [ 4.843388975698995, 45.771676728627384 ], [ 4.843386581620337, 45.771674337352522 ], [ 4.843384313107496, 45.771671854041429 ], [ 4.843382298701564, 45.771669276611831 ], [ 4.843380541378011, 45.771666695017657 ], [ 4.843379169677893, 45.771664107176669 ], [ 4.843378329995155, 45.771662050730107 ], [ 4.843377747394642, 45.771659990119019 ], [ 4.843377293335246, 45.77165792742565 ], [ 4.843377096358031, 45.771655860567762 ], [ 4.843376896405339, 45.771653703755952 ], [ 4.843376824993727, 45.771651544861868 ], [ 4.843376496500007, 45.771649390132332 ], [ 4.843376168006316, 45.771647235402767 ], [ 4.843481877225973, 45.771149341229588 ], [ 4.84348295969436, 45.771147073640087 ], [ 4.84348391064714, 45.771144718179045 ], [ 4.843484733059957, 45.771142364800383 ], [ 4.84348568103695, 45.771139919385391 ], [ 4.843486760529362, 45.771137561841932 ], [ 4.843487842997317, 45.771135294252375 ], [ 4.843489185520547, 45.771133112451956 ], [ 4.843490791074666, 45.771131106394584 ], [ 4.843492034814243, 45.771129826215741 ], [ 4.84349328152941, 45.77112863599082 ], [ 4.843494653808725, 45.77112735372954 ], [ 4.843496029063623, 45.771126161422181 ], [ 4.843497535833958, 45.771125056986307 ], [ 4.843499171144069, 45.771123950468031 ], [ 4.843500546398786, 45.771122758160629 ], [ 4.843502184684431, 45.771121741596218 ], [ 4.843505341642698, 45.77111998041152 ], [ 4.843508630116259, 45.771118307098249 ], [ 4.843512178644941, 45.771116719573961 ], [ 4.843515861664597, 45.771115309874986 ], [ 4.843519679175257, 45.771114078001304 ], [ 4.843523374097317, 45.771113028117767 ], [ 4.843527332050252, 45.7711121539771 ], [ 4.843531167414666, 45.77111146182655 ], [ 4.843533475179823, 45.771111244434806 ] ]
  , {
    color: 'gray',
    fill: true,
    fillColor: 'blue',
    fillOpacity: .1
})

const polygone = L.polyline([
  [47.318398, -0.886464],
  [47.318398, 0.069346],
  [46.722971, 0.5862335],
  [46.000000, 0.069346],
  [46.000000, -0.886464],
  [46.722971, -1.4137665],
  [47.318398, -0.886464]

], {
  color: 'gray',
  fill: true,
  fillColor: 'blue',
  fillOpacity: .1
}).addTo(mymap)

L.control.layers({
  'Main' : mainLayer,
  'Main2'  : mainLayer2
},{
  'Houses' : groupLayer,
  'Polygone' : polygonePark
}).addTo(mymap)
  }

  render() {
    const { classes } = this.props
    const data = true

    return (
      <div style={{display:'flex', justifyContent:'center', alignItems:'center', width:'100%', height:'auto'}}>
          {
              data ? (
                  <Media query={{ maxWidth: 1024 }}>
                  {(matches) =>
                      matches ? (
                        <div id="mapid" style={{width: 700, height: 700}}></div>
                      ) : (
                        <div id="mapid" style={{width: 700, height: 700}}></div>
                      )
                  }
              </Media>
              ) : (
                  <EnConstruction message='Section en cours de construction, repassez plus tard...' displayButton/>
              )
          }
      </div>
    )
  }
}

export default withStyles(styles)(ParkMap)